@use "variables" as *;

// Grid
.grid-template-columns-responsive {
  display: grid;
  grid-template-columns:
    minmax($container-spacing-sm, 1fr)
    minmax(0, $desktop-width)
    minmax($container-spacing-sm, 1fr);

  @media (min-width: #{$tablet-width-sm}) {
    /* Between tablet-sm and tablet we want gradual increase of side spacing, 
     * have it fixed for mobile (1rem) and be > 5rem up to the remaining space for desktop.
     * Probably it'd work without minmax and 1fr for mobile and desktop (that is, fixed values $container-spacing-sm and $container-spacing-lg) */
    grid-template-columns: $clamp-spacing minmax(0, $desktop-width) $clamp-spacing;
  }

  @media (min-width: #{$tablet-width}) {
    grid-template-columns:
      minmax($container-spacing-lg, 1fr)
      minmax(0, $desktop-width)
      minmax($container-spacing-lg, 1fr);
  }
}

// Buttons
.btn {
  display: inline-block;
  padding: $button-block-padding 1em;
  cursor: pointer;
  border-radius: 100vh;
  background: none;
  border: 0;
  font-weight: var(--fw-500);
}

.btn-primary {
  background-color: var(--clr-primary-300);
  color: var(--clr-neutral-100);
}

.btn-outline {
  color: var(--clr-primary-300);
}

// Misc
.separator {
  position: relative;

  &::before {
    height: 5px;
    content: "";
    position: absolute;
    left: 0;
    width: 100%;
    bottom: 0;
    background-color: var(--clr-neutral-200);
    border-radius: 100vw;
  }
}

// Utlities
.container {
  max-width: #{$desktop-width};
  margin: 0 auto;
  box-sizing: content-box; // this makes .container equivalent to the grid setup from the beginning of this file
  padding-inline: $container-spacing-sm;

  @media (min-width: #{$tablet-width-sm}) {
    padding-inline: $clamp-spacing;
  }
}

.split {
  display: flex;
  flex-direction: column;
  gap: var(--split-gap, 1rem);

  @media (min-width: #{$tablet-width-sm}) {
    flex-direction: row;
  }
}

.flow-content > * + * {
  margin-top: var(--flow-spacer, 1rem);
}

.shadow {
  box-shadow: $box-shadow;
  margin-bottom: 1.5rem; // so text below the image is not shaded
}

.link {
  color: var(--clr-primary-300);
}
